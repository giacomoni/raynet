

ned-path=HOME/raynet/simulations:HOME/raynet/simlibs/RLComponents/src:HOME/raynet/simlibs/ecmp/src:HOME/raynet/simlibs/TcpPaced/src:HOME/raynet/simlibs/RLCC/src:HOME/raynet/simlibs/rdp/src:HOME/inet4.4/src/inet:HOME/inet4.4/examples

check-signals = false
record-eventlog = false #true

[General]
network = simulations.orca.OrcaNet

*.*.numApps = 1



**.vector-recording = false#true
**.scalar-recording = false#true
**.bin-recording = false#true
**.statistic-recording = false#true


# cmdenv output
cmdenv-express-mode = true # default is true. When false allows for cmd log output
cmdenv-log-prefix = %l %J | #the prefix of a log statement line. Symbols in manual.

**.cmdenv-log-level = off
**.broker.cmdenv-log-level = off
**.stepper.cmdenv-log-level = off
**.client*.tcp.*.cmdenv-log-level = off
**.client*.tcp.*.cmdenv-log-level = off

**.server*.tcp.*.cmdenv-log-level = off
**.server*.app[*].*.cmdenv-log-level = off
**.server*.app[*].cmdenv-log-level = off

# tcp apps - client
# note, some values for client and server submodules are set to the default values.
**.client.numApps = 1
**.client.app[*].typename = "TcpSessionApp"  # FTP
**.client.app[*].sendBytes =  1MiB # increase to 135000000B
**.client.app[*].active = true # When active=true, the application will bind to given local localAddress:localPort, and connect to the connectAddress:connectPort.
**.client.app[*].localPort = 10020
**.client.app[*].connectAddress = "server"
**.client.app[*].connectPort = 10021
**.client.app[*].tOpen = 0s
**.client.app[*].tSend = 0s
**.client*.tcp.typename = "PacedTcp" #TCP stack implementation
**.client*.tcp.tcpAlgorithmClass = "learning::OrcaNewReno"  #Note that ~TcpOpenCommand allows tcpAlgorithmClass to be chosen per-connection.
**.client*.tcp.mss= 1500
**.client*.tcp.nagleEnabled = true 
**.client*.tcp.timestampSupport = true
**.client*.tcp.sackSupport = false


# tcp apps - server
**.server.numApps = 1
**.server.app[*].typename = "TcpSinkApp"
**.server.app[*].localPort = 10021
**.server*.tcp.typename = "Tcp"
**.server*.tcp.delayedAcksEnabled = false
**.server*.tcp.nagleEnabled = true 
**.server*.tcp.sackSupport = false  
**.server*.tcp.timestampSupport = true  # Timestamps (RFC 1323) support (header option) (TS will be enabled for a connection if both endpoints support it)
**.server*.tcp.mss = 1500   
**.server*.tcp.tcpAlgorithmClass = "TcpTahoe"   # TcpReno/TcpTahoe/TcpNewReno/TcpNoCongestionControl/DumbTcp

# NIC settings
**.ppp[*].ppp.queue.typename = "DropTailQueue" #in routers
**.ppp[*].ppp.queue.packetCapacity = 80 #in routers

**.client.pppg$o[0].channel.per=PER_PLACEOLDER
**.client.pppg$o[0].channel.delay=DELAY_PLACEHOLDER
**.client.pppg$o[0].channel.datarate=RATE_PLACEHOLDER

